buildscript {
	ext {
		springBootVersion = '3.0.5'
		queryDslVersion = '5.0.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
	}
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'org.duckdns.omaju'
	version = '0.0.1-SNAPSHOT'

	sourceCompatibility = '17'
	targetCompatibility = '17'
	compileJava.options.encoding = 'UTF-8'

	repositories {
		mavenCentral()
	}

	// 하위 모듈에서 공통으로 사용하는 세팅 추가
	dependencies {
		compileOnly 'org.projectlombok:lombok'

		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	}

	test {
		useJUnitPlatform()
	}
}

project(':omaju-core') {
	// 공통 코드

	bootJar { enabled = false } // core 은 bootJar 로 패키징 할 필요 없음
	jar { enabled = true }

	dependencies {
		// mariadb
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.8'

		// spring data jpa
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		// jpa
		implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.0.0'

		// jpa notnull
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// spring boot starter web
		implementation 'org.springframework.boot:spring-boot-starter-web'

		// gson
		implementation 'com.google.code.gson:gson:2.10.1'

		// http
		implementation 'org.apache.httpcomponents:httpclient:4.5.13'
		implementation 'commons-logging:commons-logging:1.2'

		// apache-commons-io
		implementation 'commons-io:commons-io:2.11.0'

		// h2
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'com.h2database:h2'

		// redis
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'

		// querydsl
		implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

		annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
		annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
		annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	}

	def querydslSrcDir = 'src/main/generated'
	sourceSets {
		main {
			java {
				srcDirs += [ querydslSrcDir ]
			}
		}
	}

	compileJava {
		options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
	}

	tasks.withType(JavaCompile) {
		options.generatedSourceOutputDirectory = file(querydslSrcDir)
	}

	clean {
		delete file(querydslSrcDir)
	}
}

project(':omaju-app-api') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':omaju-core') // 컴파일 시 omaju-core project 로딩

		// mariadb
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.8'

		// jpa
		implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.0.0'

		// spring boot validation
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// spring boot starter web
		implementation 'org.springframework.boot:spring-boot-starter-web'

		// gson
		implementation 'com.google.code.gson:gson:2.10.1'

		// http
		implementation 'org.apache.httpcomponents:httpclient:4.5.13'
		implementation 'commons-logging:commons-logging:1.2'

		// apache-commons-io
		implementation 'commons-io:commons-io:2.11.0'

		// swagger-openapi
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.3'

		// jwt
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.0.2'

		// spring security
		implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
		testImplementation 'org.springframework.security:spring-security-test'

		// bind.DatatypeConverter 관련 dependency 추가
		implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

		// h2
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'com.h2database:h2'
	}
}

project(':omaju-app-batch') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':omaju-core') // 컴파일 시 omaju-core project 로딩
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.8'
		implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.0.0'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// h2
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'com.h2database:h2'

		// fcm
		implementation 'com.google.firebase:firebase-admin:9.1.1'

		// spring boot validation
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// spring boot starter web
		implementation 'org.springframework.boot:spring-boot-starter-web'

		// apache-commons-io
		implementation 'commons-io:commons-io:2.11.0'

		// swagger-openapi
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.3'
	}
}
